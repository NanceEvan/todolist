{
  "_args": [
    [
      {
        "raw": "@vue/component-compiler-utils@^2.4.0",
        "scope": "@vue",
        "escapedName": "@vue%2fcomponent-compiler-utils",
        "name": "@vue/component-compiler-utils",
        "rawSpec": "^2.4.0",
        "spec": ">=2.4.0 <3.0.0",
        "type": "range"
      },
      "D:\\coco\\webpack\\node_modules\\vue-loader"
    ]
  ],
  "_from": "@vue/component-compiler-utils@^2.4.0",
  "_hasShrinkwrap": false,
  "_id": "@vue/component-compiler-utils@2.5.1",
  "_location": "/@vue/component-compiler-utils",
  "_nodeVersion": "10.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/component-compiler-utils_2.5.1_1548435930614_0.8463247365636757"
  },
  "_npmUser": {
    "name": "yyx990803",
    "email": "yyx990803@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@vue/component-compiler-utils@^2.4.0",
    "scope": "@vue",
    "escapedName": "@vue%2fcomponent-compiler-utils",
    "name": "@vue/component-compiler-utils",
    "rawSpec": "^2.4.0",
    "spec": ">=2.4.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/vue-loader"
  ],
  "_resolved": "https://registry.npmjs.org/@vue/component-compiler-utils/-/component-compiler-utils-2.5.1.tgz",
  "_shasum": "bd9cf68d728324d7dcede80462c2c0e8fe090acb",
  "_shrinkwrap": null,
  "_spec": "@vue/component-compiler-utils@^2.4.0",
  "_where": "D:\\coco\\webpack\\node_modules\\vue-loader",
  "author": {
    "name": "Evan You"
  },
  "bugs": {
    "url": "https://github.com/vuejs/component-compiler-utils/issues"
  },
  "dependencies": {
    "consolidate": "^0.15.1",
    "hash-sum": "^1.0.2",
    "lru-cache": "^4.1.2",
    "merge-source-map": "^1.1.0",
    "postcss": "^7.0.7",
    "postcss-selector-parser": "^5.0.0",
    "prettier": "1.16.0",
    "source-map": "^0.7.3",
    "vue-template-es2015-compiler": "^1.6.0"
  },
  "description": "Lower level utilities for compiling Vue single file components",
  "devDependencies": {
    "@types/jest": "^22.2.3",
    "@types/node": "^10.12.18",
    "conventional-changelog-cli": "^2.0.11",
    "jest": "^22.4.2",
    "less": "^3.9.0",
    "lint-staged": "^8.1.0",
    "node-sass": "^4.11.0",
    "pug": "^2.0.3",
    "stylus": "^0.54.5",
    "ts-jest": "^22.4.2",
    "typescript": "^2.7.2",
    "vue": "^2.5.21",
    "vue-template-compiler": "^2.5.21",
    "yorkie": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-4mLLh8LYDciX4BO6FVfPbuG3QNYOI70dfsNcdCzHDnN/QYiJ9KWWrf9crSDa9D/aon+QME39Lj+XDHiy9t3sRQ==",
    "shasum": "bd9cf68d728324d7dcede80462c2c0e8fe090acb",
    "tarball": "https://registry.npmjs.org/@vue/component-compiler-utils/-/component-compiler-utils-2.5.1.tgz",
    "fileCount": 37,
    "unpackedSize": 65067,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcS0HbCRA9TVsSAnZWagAAnT8P/3GcUH5ThcGpWYm7WC7X\n3330ZENjNOdAsh/ap/LFiZqiEOqc4dUYn9WqOEYqUShIgkQ8fIte73JBQKQj\nsiZdhl8bSstqhnFsuoIgm/3yVU2raEi98kFGvRsEI5mbzeFwf1YJR+yFCkS/\nZjdcY8S8r1zP2C5jxexguIhHZ4IUE165sm5uw+kHaxmp+BSGR3mIFi7zAqAq\nfx8QcpFQPPNdU8CH8eABDhBKDn6BQHgd47Pvvw8YpqRZLRVjjsCoP8J3gFuj\noZ0uad0xk7ug7N3UFT0CspN2qG1Q32ZQg1AA0uTU8NLb0oA1C6vMNOebulzg\nlZCnZ6qYaLtAXwhPJvFX/3Za5yHETMtFcr/68JbxBlmk+tJgCHE1lIN759QM\nmVYBpdsA2HHwH5nAhj2x4ln0iau8/RNpxcIrcLeLMhPshKmLt5vJvoFbuDOV\nYabusSdHP1G1jEtrMTYQOMmygxCLYpFJrEXop/SLBw4w4vmRwgRTL7hUdwUg\nzmll1yA38p+T2at/f3Wxw1e5qFABhcga9kxY6fee5fYzRWjTEmYxeG3Q9OPj\nmfF5j7J/Z8N1EFL68/Ewh9UXEPKIT5wJUOk0LnBdlcK9JvjSpiXj2OuIs+66\nUoFV6zLw18vYVCEutjmgwULQJsbeG/+InnQHJixwblVk6WFj659HnD5ev5am\nZa8F\r\n=TDgT\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "10c4105b99cd5ad5d9d4ca67162fcae6f13d4bba",
  "gitHooks": {
    "pre-commit": "lint-staged"
  },
  "homepage": "https://github.com/vuejs/component-compiler-utils#readme",
  "keywords": [
    "vue",
    "sfc",
    "component",
    "compiler"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{ts,js}": [
      "prettier --write",
      "git add"
    ]
  },
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "akryum",
      "email": "guillaume.b.chau@gmail.com"
    },
    {
      "name": "chrisvfritz",
      "email": "chrisvfritz@gmail.com"
    },
    {
      "name": "eddyerburgh",
      "email": "edward.yerburgh@gmail.com"
    },
    {
      "name": "ktsn",
      "email": "ktsn55@gmail.com"
    },
    {
      "name": "michalsnik",
      "email": "msajnog93@gmail.com"
    },
    {
      "name": "mysticatea",
      "email": "star.ctor@gmail.com"
    },
    {
      "name": "nickmessing",
      "email": "dot.nick.dot.messing@gmail.com"
    },
    {
      "name": "soda",
      "email": "haoqunjiang+npm@gmail.com"
    },
    {
      "name": "yyx990803",
      "email": "yyx990803@gmail.com"
    },
    {
      "name": "znck",
      "email": "rahulkdn@gmail.com"
    }
  ],
  "name": "@vue/component-compiler-utils",
  "optionalDependencies": {},
  "readme": "# @vue/component-compiler-utils [![Build Status](https://circleci.com/gh/vuejs/component-compiler-utils/tree/master.svg?style=shield)](https://circleci.com/gh/vuejs/component-compiler-utils/)\n\n> Lower level utilities for compiling Vue single file components\n\nThis package contains lower level utilities that you can use if you are writing a plugin / transform for a bundler or module system that compiles Vue single file components into JavaScript. It is used in [vue-loader](https://github.com/vuejs/vue-loader) version 15 and above.\n\nThe API surface is intentionally minimal - the goal is to reuse as much as possible while being as flexible as possible.\n\n## Why isn't `vue-template-compiler` a peerDependency?\n\nSince this package is more often used as a low-level utility, it is usually a transitive dependency in an actual Vue project. It is therefore the responsibility of the higher-level package (e.g. `vue-loader`) to inject `vue-template-compiler` via options when calling the `parse` and `compileTemplate` methods.\n\nNot listing it as a peer depedency also allows tooling authors to use a non-default template compiler instead of `vue-template-compiler` without having to include it just to fullfil the peer dep requirement.\n\n## API\n\n### parse(ParseOptions): SFCDescriptor\n\nParse raw single file component source into a descriptor with source maps. The actual compiler (`vue-template-compiler`) must be passed in via the `compiler` option so that the specific version used can be determined by the end user.\n\n``` ts\ninterface ParseOptions {\n  source: string\n  filename?: string\n  compiler: VueTemplateCompiler\n  // https://github.com/vuejs/vue/tree/dev/packages/vue-template-compiler#compilerparsecomponentfile-options\n  // default: { pad: 'line' }\n  compilerParseOptions?: VueTemplateCompilerParseOptions\n  sourceRoot?: string\n  needMap?: boolean\n}\n\ninterface SFCDescriptor {\n  template: SFCBlock | null\n  script: SFCBlock | null\n  styles: SFCBlock[]\n  customBlocks: SFCCustomBlock[]\n}\n\ninterface SFCCustomBlock {\n  type: string\n  content: string\n  attrs: { [key: string]: string | true }\n  start: number\n  end: number\n  map?: RawSourceMap\n}\n\ninterface SFCBlock extends SFCCustomBlock {\n  lang?: string\n  src?: string\n  scoped?: boolean\n  module?: string | boolean\n}\n```\n\n### compileTemplate(TemplateCompileOptions): TemplateCompileResults\n\nTakes raw template source and compile it into JavaScript code. The actual compiler (`vue-template-compiler`) must be passed in via the `compiler` option so that the specific version used can be determined by the end user.\n\nIt can also optionally perform pre-processing for any templating engine supported by [consolidate](https://github.com/tj/consolidate.js/).\n\n``` ts\ninterface TemplateCompileOptions {\n  source: string\n  filename: string\n\n  compiler: VueTemplateCompiler\n  https://github.com/vuejs/vue/tree/dev/packages/vue-template-compiler#compilercompiletemplate-options\n  // default: {}\n  compilerOptions?: VueTemplateCompilerOptions\n\n  // Template preprocessor\n  preprocessLang?: string\n  preprocessOptions?: any\n\n  // Transform asset urls found in the template into `require()` calls\n  // This is off by default. If set to true, the default value is\n  // {\n  //   video: ['src', 'poster'],\n  //   source: 'src',\n  //   img: 'src',\n  //   image: 'xlink:href'\n  //   use: 'xlink:href'\n  // }\n  transformAssetUrls?: AssetURLOptions | boolean\n\n  // For vue-template-es2015-compiler, which is a fork of Buble\n  transpileOptions?: any\n\n  isProduction?: boolean  // default: false\n  isFunctional?: boolean  // default: false\n  optimizeSSR?: boolean   // default: false\n\n  // Whether prettify compiled render function or not (development only)\n  // default: true\n  prettify?: boolean\n}\n\ninterface TemplateCompileResult {\n  code: string\n  source: string\n  tips: string[]\n  errors: string[]\n}\n\ninterface AssetURLOptions {\n  [name: string]: string | string[]\n}\n```\n\n#### Handling the Output\n\nThe resulting JavaScript code will look like this:\n\n``` js\nvar render = function (h) { /* ... */}\nvar staticRenderFns = [function (h) { /* ... */}, function (h) { /* ... */}]\n```\n\nIt **does NOT** assume any module system. It is your responsibility to handle the exports, if needed.\n\n### compileStyle(StyleCompileOptions)\n\nTake input raw CSS and applies scoped CSS transform. It does NOT handle pre-processors. If the component doesn't use scoped CSS then this step can be skipped.\n\n``` ts\ninterface StyleCompileOptions {\n  source: string\n  filename: string\n  id: string\n  map?: any\n  scoped?: boolean\n  trim?: boolean\n  preprocessLang?: string\n  preprocessOptions?: any\n  postcssOptions?: any\n  postcssPlugins?: any[]\n}\n\ninterface StyleCompileResults {\n  code: string\n  map: any | void\n  rawResult: LazyResult | void // raw lazy result from PostCSS\n  errors: string[]\n}\n```\n\n### compileStyleAsync(StyleCompileOptions)\n\nSame as `compileStyle(StyleCompileOptions)` but it returns a Promise resolving to `StyleCompileResults`. It can be used with async postcss plugins.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vuejs/component-compiler-utils.git"
  },
  "scripts": {
    "build": "rm -rf dist && tsc",
    "lint": "prettier --write \"{lib,test}/**/*.ts\"",
    "prepublishOnly": "yarn build && conventional-changelog -p angular -r 2 -i CHANGELOG.md -s",
    "test": "prettier --list-different \"{lib,test}/**/*.ts\" && jest --coverage"
  },
  "typings": "dist/index.d.ts",
  "version": "2.5.1"
}
